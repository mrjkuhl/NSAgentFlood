#!/usr/bin/env python
#
# Copyright 2014 Joel Cool-Panama <mr.jkuhl@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import ctypes
from sdl2 import *

def renderFrame(renderer, background, sprite, spriteSource, destination):

	SDL_RenderCopy(renderer, background, None, None);
	SDL_RenderCopy(renderer, sprite, spriteSource, destination);

	SDL_RenderPresent(renderer);

def run():

	SDL_Init(SDL_INIT_VIDEO);

	spriteSource = SDL_Rect(0, 0, spriteSize, spriteSize);
	destination = SDL_Rect(int(windowWidth / 2 - spriteSize / 2), int(windowHeight / 2 - spriteSize / 2), spriteSize, spriteSize);

	window = SDL_CreateWindow(b"NSAgent Flood", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, 800, 600, SDL_WINDOW_SHOWN);
	renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);

	windowsurface = SDL_GetWindowSurface(window);

	image = SDL_LoadBMP(b"resources/background.bmp");
	background = SDL_CreateTextureFromSurface(renderer, image);
	SDL_FreeSurface(image);

	image = SDL_LoadBMP(b"resources/player.bmp");
	sprite = SDL_CreateTextureFromSurface(renderer, image);
	SDL_FreeSurface(image);

	gameRun = True;
	event = SDL_Event();

	while gameRun:

		renderFrame(renderer, background, sprite, spriteSource, destination);

		while SDL_PollEvent(ctypes.byref(event)) != 0:

			if event.type == SDL_QUIT:

				gameRun = False;

				break;

			elif event.type == SDL_KEYDOWN:

				keyPressed = event.key.keysym.sym;
				if keyPressed == moveUpKey and destination.y - spriteSize / 2 > 0:

					destination.y -= int(spriteSize / 4);

				elif keyPressed == moveDownKey and destination.y + spriteSize * 2 < windowHeight:

					destination.y += int(spriteSize / 4);

				elif keyPressed == moveLeftKey and destination.x - spriteSize / 2  > 0:

					destination.x -= int(spriteSize / 4);

				elif keyPressed == moveRightKey and destination.x + spriteSize * 2 < windowWidth:

					destination.x += int(spriteSize / 4);

				elif keyPressed == SDLK_ESCAPE:

					gameRun = 0;

					break;

	SDL_DestroyWindow(window);
	SDL_Quit();

	return 0;

if __name__ == "__main__":

	spriteSize = 40;
	windowWidth = 800;
	windowHeight = 600;

	moveUpKey = SDLK_e;
	moveDownKey = SDLK_d;
	moveLeftKey = SDLK_s;
	moveRightKey = SDLK_f;

	sys.exit(run());
